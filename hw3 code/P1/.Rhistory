summary.out
as.data.frame(summary.out$outmat)
plot(five_factor_lm, scale = "adjr2", main = "Adjusted R^2")
plot(five_factor_lm, scale="Cp")
attach(NASDAQ)
subset_lm = lm(Nasdaq ~ ALTR + AMAT + GE + INTC + LM)
summary(subset_lm)
anova(subset_lm, reduced)
AIC(reduced) - AIC(subset_lm)
resid2 = rstudent(subset_lm)
par(mfrow=c(2,2))
plot(subset_lm$fit,resid2,
ylim=c(-10,10),main="(a)")
attach(NASDAQ)
subset_lm = lm(Nasdaq ~ ALTR + AMAT + GE + INTC + LM)
summary(subset_lm)
anova(subset_lm, reduced)
AIC(reduced) - AIC(subset_lm)
resid2 = rstudent(subset_lm)
par(mfrow=c(2,2))
plot(subset_lm$fit,resid2,
ylim=c(-10,10),main="(a)")
plot(ALTR,resid2,
ylim=c(-12,12),main="(b)")
plot(AMAT,resid2,
ylim=c(-12,12),main="(c)")
plot(GE,resid2,
ylim=c(-12,12),main="(d)")
plot(INTC,resid2,
ylim=c(-12,12),main="(e)")
plot(LM,resid2,
ylim=c(-12,12),main="(f)")
par(mfrow=c(1,1))
qqnorm(resid2,datax=F,main="QQ plot")
qqline(resid2,datax=F,lwd=5,col="blue")
library(car)
install.packages("car")
library(car)
layout(matrix(1:2, ncol = 2))
res.legend <-
subsets(regsubsets.out, statistic="adjr2", legend = FALSE, min.size = 5, main = "Adjusted R^2")
library(car)
layout(matrix(1:2, ncol = 2))
res.legend <-
subsets(regsubsets.out, statistic="adjr2", legend = FALSE, min.size = 5, main = "Adjusted R^2")
library(leaps)
five_factor_lm =
regsubsets(Nasdaq~.,
data = NASDAQ,
nbest = 1,      # 1 best model for each number of predictors
nvmax = 5,    # limit on number of variables
force.in = NULL, force.out = NULL,really.big=T,
method = "exhaustive")
summary.out = summary(five_factor_lm)
summary.out
as.data.frame(summary.out$outmat)
plot(five_factor_lm, scale = "adjr2", main = "Adjusted R^2")
plot(five_factor_lm, scale="Cp")
attach(NASDAQ)
subset_lm = lm(Nasdaq ~ ALTR + AMAT + GE + INTC + LM)
summary(subset_lm)
anova(subset_lm, reduced)
AIC(reduced) - AIC(subset_lm)
resid2 = rstudent(subset_lm)
par(mfrow=c(2,2))
plot(subset_lm$fit,resid2,
ylim=c(-10,10),main="(a)")
plot(ALTR,resid2,
ylim=c(-12,12),main="(b)")
plot(AMAT,resid2,
ylim=c(-12,12),main="(c)")
plot(GE,resid2,
ylim=c(-12,12),main="(d)")
plot(INTC,resid2,
ylim=c(-12,12),main="(e)")
plot(LM,resid2,
ylim=c(-12,12),main="(f)")
par(mfrow=c(1,1))
qqnorm(resid2,datax=F,main="QQ plot")
qqline(resid2,datax=F,lwd=5,col="blue")
library(car)
layout(matrix(1:2, ncol = 2))
res.legend <-
subsets(regsubsets.out, statistic="adjr2", legend = FALSE, min.size = 5, main = "Adjusted R^2")
library(leaps)
five_factor_lm =
regsubsets(Nasdaq~.,
data = NASDAQ,
nbest = 1,      # 1 best model for each number of predictors
nvmax = 5,    # limit on number of variables
force.in = NULL, force.out = NULL,really.big=T,
method = "exhaustive")
library(car)
layout(matrix(1:2, ncol = 2))
res.legend <-
subsets(regsubsets.out, statistic="adjr2", legend = FALSE, min.size = 5, main = "Adjusted R^2")
res.legend <-
subsets(regsubsets.out, statistic="cp", legend = FALSE, min.size = 5, main = "Mallow Cp")
abline(a = 1, b = 1, lty = 2)
function (formula, data, weights, subset, na.action = na.delete,
method = "qr", model = FALSE, x = FALSE, y = FALSE, se.fit = FALSE,
linear.predictors = TRUE, penalty = 0, penalty.matrix, tol = 1e-07,
sigma = NULL, var.penalty = c("simple", "sandwich"), ...)
{
call <- match.call()
var.penalty <- match.arg(var.penalty)
m <- match.call(expand.dots = FALSE)
mc <- match(c("formula", "data", "subset", "weights", "na.action"),
names(m), 0)
m <- m[c(1, mc)]
m$na.action <- na.action
m$drop.unused.levels <- TRUE
m[[1]] <- as.name("model.frame")
if (length(attr(terms(formula), "term.labels"))) {
dul <- .Options$drop.unused.levels
if (!length(dul) || dul) {
on.exit(options(drop.unused.levels = dul))
options(drop.unused.levels = FALSE)
}
X <- eval.parent(m)
X <- Design(X)
offset <- attr(X, "offset")
options(drop.unused.levels = dul)
atrx <- attributes(X)
sformula <- atrx$sformula
atr <- atrx$Design
nact <- atrx$na.action
Terms <- atrx$terms
assig <- DesignAssign(atr, 1, Terms)
mmcolnames <- atr$mmcolnames
penpres <- FALSE
if (!missing(penalty) && any(unlist(penalty) != 0))
penpres <- TRUE
if (!missing(penalty.matrix) && any(penalty.matrix !=
0))
penpres <- TRUE
if (penpres && missing(var.penalty))
warning("default for var.penalty has changed to \"simple\"")
if (method == "model.frame")
return(X)
scale <- as.character(formula[2])
attr(Terms, "formula") <- formula
weights <- model.extract(X, "weights")
if (length(weights) && penpres)
stop("may not specify penalty with weights")
Y <- model.extract(X, "response")
class(Y) <- setdiff(class(Y), "integer")
n <- length(Y)
if (model)
m <- X
X <- model.matrix(Terms, X)
alt <- attr(mmcolnames, "alt")
if (!all(mmcolnames %in% colnames(X)) && length(alt))
mmcolnames <- alt
X <- X[, c("(Intercept)", mmcolnames), drop = FALSE]
colnames(X) <- c("Intercept", atr$colnames)
if (method == "model.matrix")
return(X)
}
else {
if (length(weights))
stop("weights not implemented when no covariables are present")
assig <- NULL
yy <- attr(terms(formula), "variables")[1]
Y <- eval(yy, sys.parent(2))
nmiss <- sum(is.na(Y))
if (nmiss == 0)
nmiss <- NULL
else names(nmiss) <- as.character(yy)
Y <- Y[!is.na(Y)]
yest <- mean(Y)
coef <- yest
n <- length(Y)
if (!length(sigma))
sigma <- sqrt(sum((Y - yest)^2)/(n - 1))
cov <- matrix(sigma * sigma/n, nrow = 1, ncol = 1, dimnames = list("Intercept",
"Intercept"))
fit <- list(coefficients = coef, var = cov, non.slopes = 1,
fail = FALSE, residuals = Y - yest, df.residual = n -
1, intercept = TRUE, sformula = sformula)
if (linear.predictors) {
fit$linear.predictors <- rep(yest, n)
names(fit$linear.predictors) <- names(Y)
}
if (model)
fit$model <- m
if (x)
fit$x <- NULL
if (y)
fit$y <- Y
class(fit) <- c("ols", "rms", "lm")
return(fit)
}
if (!penpres) {
fit <- if (length(weights))
lm.wfit(X, Y, weights, method = method, offset = offset,
tol = tol, ...)
else lm.fit(X, Y, method = method, offset = offset,
tol = tol, ...)
cov.unscaled <- chol2inv(fit$qr$qr)
fit$fitted.values <- unclass(fit$fitted.values)
fit$residuals <- unclass(fit$residuals)
r <- fit$residuals
yhat <- Y - r
if (length(weights)) {
sse <- sum(weights * r^2)
m <- sum(weights * yhat/sum(weights))
ssr <- sum(weights * (yhat - m)^2)
r2 <- ssr/(ssr + sse)
if (!length(sigma))
sigma <- sqrt(sse/fit$df.residual)
}
else {
sse <- sum(r^2)
if (!length(sigma))
sigma <- sqrt(sse/fit$df.residual)
r2 <- 1 - sse/sum((Y - mean(Y))^2)
}
fit$var <- sigma * sigma * cov.unscaled
cnam <- dimnames(X)[[2]]
dimnames(fit$var) <- list(cnam, cnam)
fit$stats <- c(n = n, `Model L.R.` = -n * logb(1 - r2),
d.f. = length(fit$coef) - 1, R2 = r2, g = GiniMd(yhat),
Sigma = sigma)
}
else {
p <- length(atr$colnames)
if (missing(penalty.matrix))
penalty.matrix <- Penalty.matrix(atr, X)
if (nrow(penalty.matrix) != p || ncol(penalty.matrix) !=
p)
stop("penalty matrix does not have", p, "rows and columns")
psetup <- Penalty.setup(atr, penalty)
penalty <- psetup$penalty
multiplier <- psetup$multiplier
if (length(multiplier) == 1)
penalty.matrix <- multiplier * penalty.matrix
else {
a <- diag(sqrt(multiplier))
penalty.matrix <- a %*% penalty.matrix %*% a
}
fit <- lm.pfit(X[, -1, drop = FALSE], Y, offset = offset,
penalty.matrix = penalty.matrix, tol = tol, var.penalty = var.penalty)
fit$fitted.values <- unclass(fit$fitted.values)
fit$residuals <- unclass(fit$residuals)
fit$penalty <- penalty
}
if (model)
fit$model <- m
if (linear.predictors) {
fit$linear.predictors <- Y - fit$residuals
if (length(offset))
fit$linear.predictors <- fit$linear.predictors +
offset
names(fit$linear.predictors) <- names(Y)
}
if (y)
fit$y <- Y
if (se.fit) {
se <- drop((((X %*% fit$var) * X) %*% rep(1, ncol(X)))^0.5)
names(se) <- names(Y)
fit$se.fit <- se
}
if (x)
fit$x <- X[, -1, drop = FALSE]
fit <- c(fit, list(call = call, terms = Terms, Design = atr,
non.slopes = 1, na.action = nact, scale.pred = scale,
fail = FALSE))
fit$assign <- assig
fit$sformula <- sformula
class(fit) <- c("ols", "rms", "lm")
fit
}
NASDAQ = read.table("d_nasdaq_82stocks.txt", header = TRUE)
NASDAQ = NASDAQ[ -c(1) ]           # drop the Date column
full = lm(formula = Nasdaq~., data = NASDAQ) # fit a full regression model
summary(full)
library(rms) # for ols and fastbw
full_ols = ols(Nasdaq ~ AA + AAPL + AET + ALTR + AMAT + AMD + AMGN + AOC + APA +
APD + ASH + AT + AVY + AXP + AYE + BA + BAC + BAX + BBY +
BC + BF.B + BLL + BMY + BNI + C + CAH + CAT + CCE + CCL +
CEG + CFC + CLX + CMI + COP + COST + CSX + CVX + DD + DELL +
DIS + DOV + DUK + ED + EDS + EIX + EK + EOG + EXC + F + FPL +
FRX + GE + GM + GPS + GT + HD + HLT + HON + HPC + HPQ + HRB +
HSY + HUM + IBM + INTC + IPG + JNJ + JPM + JWN + K + KBH +
KMI + KO + KR + LEG + LEN + LLY + LM + LMT + LOW + LUV +
MAS, data = NASDAQ)
# Automated F-test-based backward selection using rms::fastbw()
seleted = fastbw(fit = full_ols, rule = "p", sls = 0.1)
factors_kept = NASDAQ[, c(0, seleted$factors.kept)+1]
reduced = lm(Nasdaq~., data = factors_kept)
anova(reduced, full)
# residual diagonize
resid1 = rstudent(reduced)
par(mfrow=c(1,2))
plot(reduced$fit,resid1,
ylim=c(-15,15),main="(a)")
qqnorm(resid1,datax=F,main="(b)")
qqline(resid1,datax=F,lwd=5,col="blue")
# The best model in the 5-variable case
library(leaps)
five_factor_lm =
regsubsets(Nasdaq~.,
data = NASDAQ,
nbest = 1,      # 1 best model for each number of predictors
nvmax = 5,    # limit on number of variables
force.in = NULL, force.out = NULL,really.big=T,
method = "exhaustive")
summary.out = summary(five_factor_lm)
summary.out
as.data.frame(summary.out$outmat)
plot(five_factor_lm, scale = "adjr2", main = "Adjusted R^2")
plot(five_factor_lm, scale="Cp")
# residual
attach(NASDAQ)
subset_lm = lm(Nasdaq ~ ALTR + AMAT + GE + INTC + LM)
summary(subset_lm)
anova(subset_lm, reduced)
AIC(reduced) - AIC(subset_lm)
resid2 = rstudent(subset_lm)
par(mfrow=c(2,2))
plot(subset_lm$fit,resid2,
ylim=c(-10,10),main="(a)")
plot(ALTR,resid2,
ylim=c(-12,12),main="(b)")
plot(AMAT,resid2,
ylim=c(-12,12),main="(c)")
plot(GE,resid2,
ylim=c(-12,12),main="(d)")
plot(INTC,resid2,
ylim=c(-12,12),main="(e)")
plot(LM,resid2,
ylim=c(-12,12),main="(f)")
par(mfrow=c(1,1))
qqnorm(resid2,datax=F,main="QQ plot")
qqline(resid2,datax=F,lwd=5,col="blue")
library(car)
layout(matrix(1:2, ncol = 2))
## Adjusted R2
res.legend <-
subsets(regsubsets.out, statistic="adjr2", legend = FALSE, min.size = 5, main = "Adjusted R^2")
## Mallow Cp
res.legend <-
subsets(regsubsets.out, statistic="cp", legend = FALSE, min.size = 5, main = "Mallow Cp")
abline(a = 1, b = 1, lty = 2)
View(NASDAQ)
library(car)
layout(matrix(1:2, ncol = 2))
res.legend <- subsets(regsubsets.out, statistic="adjr2", legend = FALSE, min.size = 5, main = "Adjusted R^2")
res.legend <- subsets(regsubsets.out, statistic="cp", legend = FALSE, min.size = 5, main = "Mallow Cp")
abline(a = 1, b = 1, lty = 2)
res.legend <- subsets(regsubsets.out, statistic="adjr2", legend = FALSE, min.size = 5, main = "Adjusted R^2")
NASDAQ = read.table("d_nasdaq_82stocks.txt", header = TRUE)
NASDAQ = NASDAQ[ -c(1) ]           # drop the Date column
full = lm(formula = Nasdaq~., data = NASDAQ) # fit a full regression model
summary(full)
library(rms) # for ols and fastbw
full_ols = ols(Nasdaq ~ AA + AAPL + AET + ALTR + AMAT + AMD + AMGN + AOC + APA +
APD + ASH + AT + AVY + AXP + AYE + BA + BAC + BAX + BBY +
BC + BF.B + BLL + BMY + BNI + C + CAH + CAT + CCE + CCL +
CEG + CFC + CLX + CMI + COP + COST + CSX + CVX + DD + DELL +
DIS + DOV + DUK + ED + EDS + EIX + EK + EOG + EXC + F + FPL +
FRX + GE + GM + GPS + GT + HD + HLT + HON + HPC + HPQ + HRB +
HSY + HUM + IBM + INTC + IPG + JNJ + JPM + JWN + K + KBH +
KMI + KO + KR + LEG + LEN + LLY + LM + LMT + LOW + LUV +
MAS, data = NASDAQ)
seleted = fastbw(fit = full_ols, rule = "p", sls = 0.1)
factors_kept = NASDAQ[, c(0, seleted$factors.kept)+1]
reduced = lm(Nasdaq~., data = factors_kept)
anova(reduced, full)
resid1 = rstudent(reduced)
par(mfrow=c(1,2))
plot(reduced$fit,resid1,
ylim=c(-15,15),main="(a)")
qqnorm(resid1,datax=F,main="(b)")
qqline(resid1,datax=F,lwd=5,col="blue")
library(leaps)
five_factor_lm =
regsubsets(Nasdaq~.,
data = NASDAQ,
nbest = 1,      # 1 best model for each number of predictors
nvmax = 5,    # limit on number of variables
force.in = NULL, force.out = NULL,really.big=T,
method = "exhaustive")
summary.out = summary(five_factor_lm)
summary.out
as.data.frame(summary.out$outmat)
plot(five_factor_lm, scale = "adjr2", main = "Adjusted R^2")
plot(five_factor_lm, scale="Cp")
regsubsets.out
regsubsets
summary.out
summary.out = summary(five_factor_lm)
summary.out
as.data.frame(summary.out$outmat)
plot(five_factor_lm, scale = "adjr2", main = "Adjusted R^2")
plot(five_factor_lm, scale="Cp")
attach(NASDAQ)
subset_lm = lm(Nasdaq ~ ALTR + AMAT + GE + INTC + LM)
summary(subset_lm)
anova(subset_lm, reduced)
AIC(reduced) - AIC(subset_lm)
resid2 = rstudent(subset_lm)
par(mfrow=c(2,2))
plot(subset_lm$fit,resid2,
ylim=c(-10,10),main="(a)")
plot(ALTR,resid2,
ylim=c(-12,12),main="(b)")
plot(AMAT,resid2,
ylim=c(-12,12),main="(c)")
plot(GE,resid2,
ylim=c(-12,12),main="(d)")
plot(INTC,resid2,
ylim=c(-12,12),main="(e)")
plot(LM,resid2,
ylim=c(-12,12),main="(f)")
par(mfrow=c(1,1))
qqnorm(resid2,datax=F,main="QQ plot")
qqline(resid2,datax=F,lwd=5,col="blue")
library(car)
layout(matrix(1:2, ncol = 2))
res.legend <- subsets(summary.out, statistic="adjr2", legend = FALSE, min.size = 5, main = "Adjusted R^2")
library(car)
layout(matrix(1:2, ncol = 2))
res.legend <-
subsets(regsubsets.out, statistic="adjr2", legend = FALSE, min.size = 5, main = "Adjusted R^2")
res.legend <-
subsets(regsubsets.out, statistic="cp", legend = FALSE, min.size = 5, main = "Mallow Cp")
abline(a = 1, b = 1, lty = 2)
layout(matrix(1:2, ncol = 2))
res.legend <-
subsets(five_factor_lm.out, statistic="adjr2", legend = FALSE, min.size = 5, main = "Adjusted R^2")
res.legend <-
subsets(five_factor_lm, statistic="adjr2", legend = FALSE, min.size = 5, main = "Adjusted R^2")
res.legend <-
subsets(five_factor_lm, statistic="cp", legend = FALSE, min.size = 5, main = "Mallow Cp")
abline(a = 1, b = 1, lty = 2)
NASDAQ = read.table("d_nasdaq_82stocks.txt", header = TRUE)
NASDAQ = NASDAQ[ -c(1) ]           # drop the Date column
full = lm(formula = Nasdaq~., data = NASDAQ) # fit a full regression model
summary(full)
library(rms) # for ols and fastbw
full_ols = ols(Nasdaq ~ AA + AAPL + AET + ALTR + AMAT + AMD + AMGN + AOC + APA +
APD + ASH + AT + AVY + AXP + AYE + BA + BAC + BAX + BBY +
BC + BF.B + BLL + BMY + BNI + C + CAH + CAT + CCE + CCL +
CEG + CFC + CLX + CMI + COP + COST + CSX + CVX + DD + DELL +
DIS + DOV + DUK + ED + EDS + EIX + EK + EOG + EXC + F + FPL +
FRX + GE + GM + GPS + GT + HD + HLT + HON + HPC + HPQ + HRB +
HSY + HUM + IBM + INTC + IPG + JNJ + JPM + JWN + K + KBH +
KMI + KO + KR + LEG + LEN + LLY + LM + LMT + LOW + LUV +
MAS, data = NASDAQ)
seleted = fastbw(fit = full_ols, rule = "p", sls = 0.1)
factors_kept = NASDAQ[, c(0, seleted$factors.kept)+1]
reduced = lm(Nasdaq~., data = factors_kept)
anova(reduced, full)
resid1 = rstudent(reduced)
par(mfrow=c(1,2))
plot(reduced$fit,resid1,
ylim=c(-15,15),main="(a)")
qqnorm(resid1,datax=F,main="(b)")
qqline(resid1,datax=F,lwd=5,col="blue")
library(leaps)
five_factor_lm =
regsubsets(Nasdaq~.,
data = NASDAQ,
nbest = 1,      # 1 best model for each number of predictors
nvmax = 5,    # limit on number of variables
force.in = NULL, force.out = NULL,really.big=T,
method = "exhaustive")
summary.out = summary(five_factor_lm)
summary.out
as.data.frame(summary.out$outmat)
plot(five_factor_lm, scale = "adjr2", main = "Adjusted R^2")
plot(five_factor_lm, scale="Cp")
library(leaps)
five_factor_lm =
regsubsets(Nasdaq~.,
data = NASDAQ,
nbest = 1,      # 1 best model for each number of predictors
nvmax = 5,    # limit on number of variables
force.in = NULL, force.out = NULL,really.big=T,
method = "exhaustive")
summary.out = summary(five_factor_lm)
summary.out
as.data.frame(summary.out$outmat)
plot(five_factor_lm, scale = "adjr2", main = "Adjusted R^2")
plot(five_factor_lm, scale="Cp")
attach(NASDAQ)
subset_lm = lm(Nasdaq ~ ALTR + AMAT + GE + INTC + LM)
summary(subset_lm)
anova(subset_lm, reduced)
AIC(reduced) - AIC(subset_lm)
resid2 = rstudent(subset_lm)
par(mfrow=c(2,2))
plot(subset_lm$fit,resid2,
ylim=c(-10,10),main="(a)")
plot(ALTR,resid2,
ylim=c(-12,12),main="(b)")
plot(AMAT,resid2,
ylim=c(-12,12),main="(c)")
plot(GE,resid2,
ylim=c(-12,12),main="(d)")
plot(INTC,resid2,
ylim=c(-12,12),main="(e)")
plot(LM,resid2,
ylim=c(-12,12),main="(f)")
par(mfrow=c(1,1))
qqnorm(resid2,datax=F,main="QQ plot")
qqline(resid2,datax=F,lwd=5,col="blue")
as.data.frame(summary.out$outmat)
plot(five_factor_lm, scale = "adjr2", main = "Adjusted R^2")
plot(five_factor_lm, scale="Cp")
