data(EuStockMarkets)
mode(EuStockMarkets)
class(EuStockMarkets)
plot(EuStockMarkets)
pdf("EuStocks.pdf", width = 6, height = 5)
plot(EuStockMarkets)
graphics.off()
logR = diff(log(EuStockMarkets))
plot(logR)
data(EuStockMarkets)
mode(EuStockMarkets)
class(EuStockMarkets)
plot(EuStockMarkets)
logR = diff(log(EuStockMarkets))
plot(logR)
plot(as.data.frame(logR))
inddex.names = dimnames(logR)[[2]]
par(mfrow=c(2,2))
for (i in 1:4)
{
qqnorm(logR[,], datax=T, main = index.names[i])
qqline(logR[,i], datax = T)
print(shapiro.test(logR[,i]))
}
plot(as.data.frame(logR))
index.names = dimnames(logR)[[2]]
par(mfrow=c(2,2))
for (i in 1:4)
{
qqnorm(logR[,], datax=T, main = index.names[i])
qqline(logR[,i], datax = T)
print(shapiro.test(logR[,i]))
}
clearPushBack()
clc
plot(as.data.frame(logR))
index.names = dimnames(logR)[[2]]
par(mfrow=c(2,2))
for (i in 1:4)
{
qqnorm(logR[,], datax=T, main = index.names[i])
qqline(logR[,i], datax = T)
print(shapiro.test(logR[,i]))
}
n=dim(logR)[1]
plot(as.data.frame(logR))
index.names = dimnames(logR)[[2]]
par(mfrow=c(2,2))
for(i in 1:4)
{
qqnorm(logR[,i],datax=T,main=index.names[i])
qqline(logR[,i],datax=T)
print(shapiro.test(logR[,i]))
}
i = 1
logR[,i]
logR[,1]
shapiro.test(logR[,1])
shapiro.test(logR[,2])
shapiro.test(logR[,3])
shapiro.test(logR[,4])
n=dim(logR)[1]
q.grid = (1:n)/(n+1)
df=c(1,4,6,10,20,30)
for(i in 1:4)
{
windows()
par(mfrow=c(3,2))
for(j in 1:6)
{
qqplot(logR[,i], qt(q.grid,df=df[j]),
main=paste(index.names[i], ", df=", df[j]) )
abline(lm(qt(c(.25,.75),df=df[j])~quantile(logR[,i],c(.25,.75))))
}
}
data(EuStockMarkets)
mode(EuStockMarkets)
class(EuStockMarkets)
plot(EuStockMarkets)
pdf("EuStocks.pdf", width = 6, height = 5)
plot(EuStockMarkets)
graphics.off()
logR = diff(log(EuStockMarkets))
plot(logR)
plot(as.data.frame(logR))
index.names = dimnames(logR)[[2]]
par(mfrow=c(2,2))
for(i in 1:4)
{
qqnorm(logR[,i],datax=T,main=index.names[i])
qqline(logR[,i],datax=T)
print(shapiro.test(logR[,i]))
}
shapiro.test(logR[,1]) # DAX
shapiro.test(logR[,2]) # SMI
shapiro.test(logR[,3]) # CAC
shapiro.test(logR[,4]) # FTSE
n=dim(logR)[1]
q.grid = (1:n)/(n+1)
df=c(1,4,6,10,20,30)
for(i in 1:4)
{
windows()
par(mfrow=c(3,2))
for(j in 1:6)
{
qqplot(logR[,i], qt(q.grid,df=df[j]),
main=paste(index.names[i], ", df=", df[j]) )
abline(lm(qt(c(.25,.75),df=df[j])~quantile(logR[,i],c(.25,.75))))
}
}
for(i in 1:4)
{
windows()
par(mfrow=c(3,2))
for(j in 1:6)
{
qqplot(logR[,i], qt(q.grid,df=df[j]),
main=paste(index.names[i], ", df=", df[j]) )
abline(lm(qt(c(.25,.75),df=df[j])~quantile(logR[,i],c(.25,.75))))
}
}
par(mfrow=c(3,2))
for(j in 1:6)
{
qqplot(logR[,i], qt(q.grid,df=df[j]),
main=paste(index.names[i], ", df=", df[j]) )
abline(lm(qt(c(.25,.75),df=df[j])~quantile(logR[,i],c(.25,.75))))
}
library("fGarch")
install.packages("fGarch")
library("fGarch")
x = seq(-.1,.1,by=.001)
par(mfrow=c(1,1))
plot(density(logR[,1]),lwd=2,ylim=c(0,60))
lines(x, dstd(x,mean=median(logR[,1]),sd=mad(logR[,1]),nu=5),lty=5,lwd=2)
lines(x,dnorm(x,mean=mean(logR[,1]),sd=sd(logR[,1])),lty=3,lwd=4)
# zoom in the left tail
plot(density(logR[,1])),lwd=2,ylim=c(0,30),xlim=c(-0.05,-0.01)
lines(x,dstd(x,mean=median(logR[,1]),sd=mad(logR[,1]),nu=5),lty=5,lwd=2)
lines(x,dnorm(x,mean=mean(logR[,1]),sd=sd(logR[,1])),lty=3,lwd=4)
legend("topleft",c("KDE","t: df=5","normal"),lwd=c(2,2,4),lty=c(1,5,3))
plot(density(logR[,1]),lwd=2,ylim=c(0,30),xlim=c(-0.05,-0.01))
lines(x,dstd(x,mean=median(logR[,1]),sd=mad(logR[,1]),nu=5),lty=5,lwd=2)
lines(x,dnorm(x,mean=mean(logR[,1]),sd=sd(logR[,1])),lty=3,lwd=4)
plot(density(logR[,1]),lwd=2,ylim=c(0,30),xlim=c(0.01,0.05))
lines(x,dstd(x,mean=median(logR[,1]),sd=mad(logR[,1]),nu=5),lty=5,lwd=2)
lines(x,dnorm(x,mean=mean(logR[,1]),sd=sd(logR[,1])),lty=3,lwd=4)
plot(density(logR[,1],adjust=3),lwd=2,ylim=c(0,60))
lines(x,dstd(x,mean=median(logR[,1]),sd=mad(logR[,1]),nu=5),lty=5,lwd=2)
lines(x,dnorm(x,mean=mean(logR[,1]),sd=sd(logR[,1])),lty=3,lwd=4)
legend("topleft",c("KDE","t: df=5","normal"),lwd=c(2,2,4),lty=c(1,5,3))
legend("topleft",c("KDE","t: df=5","normal"),lwd=c(2,2,4),lty=c(1,5,3))
legend("topleft",c("KDE","t: df=5","normal"),lwd=c(2,2,4),lty=c(1,5,3))
legend("topright",c("KDE","t: df=5","normal"),lwd=c(2,2,4),lty=c(1,5,3))
plot(density(logR[,1]),lwd=2,ylim=c(0,30),xlim=c(0.01,0.05))
lines(x,dstd(x,mean=median(logR[,1]),sd=mad(logR[,1]),nu=5),lty=5,lwd=2)
lines(x,dnorm(x,mean=mean(logR[,1]),sd=sd(logR[,1])),lty=3,lwd=4)
legend("topright",c("KDE","t: df=5","normal"),lwd=c(2,2,4),lty=c(1,5,3))
plot(density(logR[,1],adjust=3),lwd=2,ylim=c(0,60))
lines(x,dstd(x,mean=median(logR[,1]),sd=mad(logR[,1]),nu=5),lty=5,lwd=2)
lines(x,dnorm(x,mean=mean(logR[,1]),sd=sd(logR[,1])),lty=3,lwd=4)
x = seq(-.1,.1,by=.001)
par(mfrow=c(1,1))
plot(density(logR[,1]),lwd=2,ylim=c(0,60))
lines(x,dstd(x,mean=median(logR[,1]),sd=mad(logR[,1]),nu=5),lty=5,lwd=2)
lines(x,dnorm(x,mean=mean(logR[,1]),sd=sd(logR[,1])),lty=3,lwd=4)
legend("topleft",c("KDE","t: df=5","normal"),lwd=c(2,2,4),lty=c(1,5,3))
legend("topleft",c("KDE","t: df=5","normal"),lwd=c(2,2,4),lty=c(1,5,3))
library("fGarch")
x = seq(-.1,.1,by=.001)
par(mfrow=c(1,1))
plot(density(logR[,1]),lwd=2,ylim=c(0,60))
lines(x,dstd(x,mean=median(logR[,1]),sd=mad(logR[,1]),nu=5),lty=5,lwd=2)
lines(x,dnorm(x,mean=mean(logR[,1]),sd=sd(logR[,1])),lty=3,lwd=4)
legend("topleft",c("KDE","t: df=5","normal"),lwd=c(2,2,4),lty=c(1,5,3))
